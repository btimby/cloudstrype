upstream cloudstrype {
    server web:8080;
}

server {
    listen 80 default_server;
    listen [::]:80 default_server;
    server_name cloudstrype.io;
    return 301 https://$http_host$request_uri;
}

server {
    listen 443 ssl default_server;
    listen [::]:443 ssl default_server;
    server_name cloudstrype.io;

    ssl_certificate "/ssl/combined.pem";
    ssl_certificate_key "/ssl/server.key";
    ssl_session_cache shared:SSL:1m;
    ssl_session_timeout  10m;
    ssl_ciphers HIGH:!aNULL:!MD5;
    ssl_prefer_server_ciphers on;

    # Need to work out a way to serve static in "production" mode, for now,
    # allow Django to do it (removes need for collectstatic).
    #location /static {
    #    alias /web/cloudstrype/.static;
    #}

    location / {
        # Send headers to the backend server.
        proxy_set_header Host $http_host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;

        # Max file upload size, we need to specify this for a particular location
        # and it basically needs to be unlimited (but buffered to disk).
        client_max_body_size 32M;

        # Minimize timeout errors to backend server.
        proxy_connect_timeout       600;
        proxy_send_timeout          600;
        proxy_read_timeout          600;
        send_timeout                600;

        proxy_pass http://cloudstrype;
    }
}
