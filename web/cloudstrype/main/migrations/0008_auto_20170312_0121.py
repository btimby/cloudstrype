# -*- coding: utf-8 -*-
# Generated by Django 1.10.6 on 2017-03-12 01:21
from __future__ import unicode_literals

import django.contrib.postgres.search
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('main', '0007_directory_created'),
    ]

    operations = [
        migrations.AddField(
            model_name='directory',
            name='search',
            field=django.contrib.postgres.search.SearchVectorField(blank=True, editable=False, null=True),
        ),
        migrations.AddField(
            model_name='file',
            name='search',
            field=django.contrib.postgres.search.SearchVectorField(blank=True, editable=False, null=True),
        ),
        migrations.AlterField(
            model_name='file',
            name='mime',
            field=models.CharField(max_length=64),
        ),
        migrations.RunSQL([
            "CREATE FUNCTION main_file_trigger() RETURNS trigger AS $$"
            "begin"
            "  new.search :="
            "     setweight(to_tsvector('pg_catalog.english', coalesce(new.name,'')), 'A');"
            "  return new;"
            "end"
            "$$ LANGUAGE plpgsql"
        ,
            "CREATE TRIGGER main_file_update BEFORE INSERT OR UPDATE"
            "    ON main_file FOR EACH ROW EXECUTE PROCEDURE main_file_trigger()"
        ,
            "CREATE FUNCTION main_directory_trigger() RETURNS trigger AS $$"
            "begin"
            "  new.search :="
            "     setweight(to_tsvector('pg_catalog.english', coalesce(new.name,'')), 'A') ||"
            "     setweight(to_tsvector('pg_catalog.english', coalesce(new.display_name,'')), 'A') ||"
            "     setweight(to_tsvector('pg_catalog.english', coalesce(new.display_path,'')), 'A');"
            "  return new;"
            "end"
            "$$ LANGUAGE plpgsql"
        ,
            "CREATE TRIGGER main_directory_update BEFORE INSERT OR UPDATE"
            "    ON main_directory FOR EACH ROW EXECUTE PROCEDURE main_directory_trigger()"
        ], [
            "DROP FUNCTION main_directory_trigger()",
            "DROP TRIGGER main_directory_update ON main_directory",
            "DROP FUNCTION main_file_trigger()",
            "DROP TRIGGER main_file_update ON main_file",
        ])
    ]
